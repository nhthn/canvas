name: CMake

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  linux:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Update repositories
      run: sudo apt-get update

    - name: Install dependencies
      run: sudo apt-get install build-essential cmake libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev portaudio19-dev libsndfile1-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  windows:
    runs-on: windows-2019

    env:
      LIBS_DOWNLOAD_PATH: ${{github.workspace}}/../3rd-party

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Download ASIO SDK
      run: |
        mkdir -p ${{env.LIBS_DOWNLOAD_PATH}}/asiosdk && cd ${{env.LIBS_DOWNLOAD_PATH}}/asiosdk
        curl -L https://www.steinberg.net/asiosdk -o asiosdk.zip
        7z x asiosdk.zip -y

    - name: Download FFTW and generate necessary .lib file
      run: |
        mkdir -p ${{env.LIBS_DOWNLOAD_PATH}}/fftw && cd ${{env.LIBS_DOWNLOAD_PATH}}/fftw
        curl -L https://fftw.org/pub/fftw/fftw-3.3.5-dll64.zip -o fftw.zip
        7z x fftw.zip -y
        call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
        lib.exe /machine:x64 /def:libfftw3f-3.def
